{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotEnoughETH",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x06dad59a1651cb2066f78219fecf3ad094b5901e07e73b6af7df8e7b4ae9e56f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "963646",
    "logsBloom": "0x
    "blockHash": "0xfcc6f3e6e25ddfcfb7ef9eedd511ab4e0eac8cb616740a233e13f8245d45403e",
    "transactionHash": "0x06dad59a1651cb2066f78219fecf3ad094b5901e07e73b6af7df8e7b4ae9e56f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "963646",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "924ddcb04005c9670278f930ee5ad3e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotEnoughETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Wilmer Daza\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract fro crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//import \\\"hardhat/console.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NotEnoughETH();\\n\\n/**\\n * @title A contract fro crowd funding\\n * @author Wilmer Daza\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n\\tusing PriceConverter for uint256;\\n\\n\\tuint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\taddress private immutable i_owner;\\n\\n\\taddress[] private s_funders;\\n\\tmapping(address => uint256) private s_addressToAmountFunded;\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\n\\tmodifier onlyOwner() {\\n\\t\\tif (msg.sender != i_owner) revert FundMe__NotOwner();\\n\\t\\t_;\\n\\t}\\n\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ti_owner = msg.sender;\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tfund();\\n\\t}\\n\\n\\t/**\\n\\t * @notice This function funds this contract\\n\\t * @dev This implements price feeds as our library\\n\\t */\\n\\tfunction fund() public payable {\\n\\t\\tif (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD)\\n\\t\\t\\trevert FundMe__NotEnoughETH();\\n\\n\\t\\t/* require(\\n\\t\\t\\tmsg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n\\t\\t\\t\\\"You need to spend more ETH!\\\"\\n\\t\\t); */\\n\\n\\t\\t//console.log(\\\"Receiving funds ...\\\", msg.value);\\n\\n\\t\\ts_addressToAmountFunded[msg.sender] += msg.value;\\n\\t\\ts_funders.push(msg.sender);\\n\\t}\\n\\n\\tfunction withdraw() public payable onlyOwner {\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < s_funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = s_funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\ts_funders = new address[](0);\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}(\\\"\\\");\\n\\t\\trequire(callSuccess, \\\"Call failed\\\");\\n\\t}\\n\\n\\tfunction cheaperWithdraw() public payable onlyOwner {\\n\\t\\taddress[] memory funders = s_funders;\\n\\t\\tfor (\\n\\t\\t\\tuint256 funderIndex = 0;\\n\\t\\t\\tfunderIndex < funders.length;\\n\\t\\t\\tfunderIndex++\\n\\t\\t) {\\n\\t\\t\\taddress funder = funders[funderIndex];\\n\\t\\t\\ts_addressToAmountFunded[funder] = 0;\\n\\t\\t}\\n\\t\\ts_funders = new address[](0);\\n\\t\\t(bool callSuccess, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: address(this).balance\\n\\t\\t}(\\\"\\\");\\n\\t\\trequire(callSuccess, \\\"Call failed\\\");\\n\\t}\\n\\n\\tfunction getOwner() public view returns (address) {\\n\\t\\treturn i_owner;\\n\\t}\\n\\n\\tfunction getFunder(uint256 index) public view returns (address) {\\n\\t\\treturn s_funders[index];\\n\\t}\\n\\n\\tfunction getAddressToAmountFunded(\\n\\t\\taddress funder\\n\\t) public view returns (uint256) {\\n\\t\\treturn s_addressToAmountFunded[funder];\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n}\\n\",\"keccak256\":\"0x8c9f2523a2f63276b4dea38d0d7010b019873759a6afd32a5a1fc53f700997b8\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n\\t// We could make this public, but then we'd have to deploy it\\n\\tfunction getPrice(\\n\\t\\tAggregatorV3Interface priceFeed\\n\\t) internal view returns (uint256) {\\n\\t\\t// Goerli ETH / USD Address\\n\\t\\t// https://docs.chain.link/docs/ethereum-addresses/\\n\\t\\t(, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\t\\t// ETH/USD rate in 18 digit\\n\\t\\treturn uint256(answer * 10000000000);\\n\\t\\t// or (Both will do the same thing)\\n\\t\\t// return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n\\t}\\n\\n\\t// 1000000000\\n\\tfunction getConversionRate(\\n\\t\\tuint256 ethAmount,\\n\\t\\tAggregatorV3Interface priceFeed\\n\\t) internal view returns (uint256) {\\n\\t\\tuint256 ethPrice = getPrice(priceFeed);\\n\\t\\tuint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n\\t\\t// or (Both will do the same thing)\\n\\t\\t// uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n\\t\\t// the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n\\t\\treturn ethAmountInUsd;\\n\\t}\\n}\\n\",\"keccak256\":\"0x1b59bababcd61dcbcd92821964ef31a9e4c0c20e8bfecb0b9035a1d8594b220d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011883803806200118883398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161100f620001796000396000818161032e0152818161057d01526105cd015261100f6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a8d565b6102e3565b6040516100cc9190610ad3565b60405180910390f35b6100dd61032c565b005b3480156100eb57600080fd5b506100f461056c565b6040516101019190610ad3565b60405180910390f35b34801561011657600080fd5b5061011f610579565b60405161012c9190610afd565b60405180910390f35b34801561014157600080fd5b5061014a6105a1565b6040516101579190610b77565b60405180910390f35b6101686101b1565b005b6101726105cb565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bbe565b61086f565b6040516101a89190610afd565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b1015610228576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610c1a565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045c5760008082815481106103d6576103d5610c4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045490610c7d565b9150506103b4565b50600067ffffffffffffffff81111561047857610477610cc5565b5b6040519080825280602002602001820160405280156104a65781602001602082028036833780820191505090505b50600090805190602001906104bc929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e390610d25565b60006040518083038185875af1925050503d8060008114610520576040519150601f19603f3d011682016040523d82523d6000602084013e610525565b606091505b5050905080610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610d97565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610650576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610689575b5050505050905060005b815181101561075e5760008282815181106106fb576106fa610c4e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075690610c7d565b9150506106dd565b50600067ffffffffffffffff81111561077a57610779610cc5565b5b6040519080825280602002602001820160405280156107a85781602001602082028036833780820191505090505b50600090805190602001906107be929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e590610d25565b60006040518083038185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b505090508061086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290610d97565b60405180910390fd5b5050565b600080828154811061088457610883610c4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610db7565b6108e59190610e28565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610ee6565b5050509150506402540be4008161097b9190610f61565b915050919050565b8280548282559060005260206000209081019282156109fc579160200282015b828111156109fb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a3565b5b509050610a099190610a0d565b5090565b5b80821115610a26576000816000905550600101610a0e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5a82610a2f565b9050919050565b610a6a81610a4f565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa2610a2a565b5b6000610ab184828501610a78565b91505092915050565b6000819050919050565b610acd81610aba565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b610af781610a4f565b82525050565b6000602082019050610b126000830184610aee565b92915050565b6000819050919050565b6000610b3d610b38610b3384610a2f565b610b18565b610a2f565b9050919050565b6000610b4f82610b22565b9050919050565b6000610b6182610b44565b9050919050565b610b7181610b56565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b610b9b81610aba565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600060208284031215610bd457610bd3610a2a565b5b6000610be284828501610ba9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2582610aba565b9150610c3083610aba565b9250828201905080821115610c4857610c47610beb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c8882610aba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cba57610cb9610beb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d0f600083610cf4565b9150610d1a82610cff565b600082019050919050565b6000610d3082610d02565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d81600b83610d3a565b9150610d8c82610d4b565b602082019050919050565b60006020820190508181036000830152610db081610d74565b9050919050565b6000610dc282610aba565b9150610dcd83610aba565b9250828202610ddb81610aba565b91508282048414831517610df257610df1610beb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3382610aba565b9150610e3e83610aba565b925082610e4e57610e4d610df9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7881610e59565b8114610e8357600080fd5b50565b600081519050610e9581610e6f565b92915050565b6000819050919050565b610eae81610e9b565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b600081519050610ee081610b92565b92915050565b600080600080600060a08688031215610f0257610f01610a2a565b5b6000610f1088828901610e86565b9550506020610f2188828901610ebc565b9450506040610f3288828901610ed1565b9350506060610f4388828901610ed1565b9250506080610f5488828901610e86565b9150509295509295909350565b6000610f6c82610e9b565b9150610f7783610e9b565b9250828202610f8581610e9b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fbd57610fbc610beb565b5b8282058414831517610fd257610fd1610beb565b5b509291505056fea2646970667358221220b99a4c108301f05f4f7a478cddc3555c312ee64491dcf10126b9883b3fa7c37c64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a8d565b6102e3565b6040516100cc9190610ad3565b60405180910390f35b6100dd61032c565b005b3480156100eb57600080fd5b506100f461056c565b6040516101019190610ad3565b60405180910390f35b34801561011657600080fd5b5061011f610579565b60405161012c9190610afd565b60405180910390f35b34801561014157600080fd5b5061014a6105a1565b6040516101579190610b77565b60405180910390f35b6101686101b1565b005b6101726105cb565b005b34801561018057600080fd5b5061019b60048036038101906101969190610bbe565b61086f565b6040516101a89190610afd565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108b690919063ffffffff16565b1015610228576040517fb514e4ed00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610c1a565b925050819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b1576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561045c5760008082815481106103d6576103d5610c4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045490610c7d565b9150506103b4565b50600067ffffffffffffffff81111561047857610477610cc5565b5b6040519080825280602002602001820160405280156104a65781602001602082028036833780820191505090505b50600090805190602001906104bc929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e390610d25565b60006040518083038185875af1925050503d8060008114610520576040519150601f19603f3d011682016040523d82523d6000602084013e610525565b606091505b5050905080610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610d97565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610650576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610689575b5050505050905060005b815181101561075e5760008282815181106106fb576106fa610c4e565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075690610c7d565b9150506106dd565b50600067ffffffffffffffff81111561077a57610779610cc5565b5b6040519080825280602002602001820160405280156107a85781602001602082028036833780820191505090505b50600090805190602001906107be929190610983565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107e590610d25565b60006040518083038185875af1925050503d8060008114610822576040519150601f19603f3d011682016040523d82523d6000602084013e610827565b606091505b505090508061086b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086290610d97565b60405180910390fd5b5050565b600080828154811061088457610883610c4e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108c2836108f2565b90506000670de0b6b3a764000085836108db9190610db7565b6108e59190610e28565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109649190610ee6565b5050509150506402540be4008161097b9190610f61565b915050919050565b8280548282559060005260206000209081019282156109fc579160200282015b828111156109fb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109a3565b5b509050610a099190610a0d565b5090565b5b80821115610a26576000816000905550600101610a0e565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5a82610a2f565b9050919050565b610a6a81610a4f565b8114610a7557600080fd5b50565b600081359050610a8781610a61565b92915050565b600060208284031215610aa357610aa2610a2a565b5b6000610ab184828501610a78565b91505092915050565b6000819050919050565b610acd81610aba565b82525050565b6000602082019050610ae86000830184610ac4565b92915050565b610af781610a4f565b82525050565b6000602082019050610b126000830184610aee565b92915050565b6000819050919050565b6000610b3d610b38610b3384610a2f565b610b18565b610a2f565b9050919050565b6000610b4f82610b22565b9050919050565b6000610b6182610b44565b9050919050565b610b7181610b56565b82525050565b6000602082019050610b8c6000830184610b68565b92915050565b610b9b81610aba565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600060208284031215610bd457610bd3610a2a565b5b6000610be284828501610ba9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c2582610aba565b9150610c3083610aba565b9250828201905080821115610c4857610c47610beb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610c8882610aba565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cba57610cb9610beb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d0f600083610cf4565b9150610d1a82610cff565b600082019050919050565b6000610d3082610d02565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d81600b83610d3a565b9150610d8c82610d4b565b602082019050919050565b60006020820190508181036000830152610db081610d74565b9050919050565b6000610dc282610aba565b9150610dcd83610aba565b9250828202610ddb81610aba565b91508282048414831517610df257610df1610beb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e3382610aba565b9150610e3e83610aba565b925082610e4e57610e4d610df9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610e7881610e59565b8114610e8357600080fd5b50565b600081519050610e9581610e6f565b92915050565b6000819050919050565b610eae81610e9b565b8114610eb957600080fd5b50565b600081519050610ecb81610ea5565b92915050565b600081519050610ee081610b92565b92915050565b600080600080600060a08688031215610f0257610f01610a2a565b5b6000610f1088828901610e86565b9550506020610f2188828901610ebc565b9450506040610f3288828901610ed1565b9350506060610f4388828901610ed1565b9250506080610f5488828901610e86565b9150509295509295909350565b6000610f6c82610e9b565b9150610f7783610e9b565b9250828202610f8581610e9b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610fbd57610fbc610beb565b5b8282058414831517610fd257610fd1610beb565b5b509291505056fea2646970667358221220b99a4c108301f05f4f7a478cddc3555c312ee64491dcf10126b9883b3fa7c37c64736f6c63430008110033",
  "devdoc": {
    "author": "Wilmer Daza",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {
      "fund()": {
        "details": "This implements price feeds as our library"
      }
    },
    "title": "A contract fro crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "fund()": {
        "notice": "This function funds this contract"
      }
    },
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 332,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 336,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 339,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)102"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}